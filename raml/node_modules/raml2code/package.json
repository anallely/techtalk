{
  "name": "raml2code",
  "version": "0.8.39",
  "description": "Raml spec to code",
  "main": "index.js",
  "scripts": {
    "test": "gulp"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:gextech/raml2code.git"
  },
  "keywords": [
    "RAML",
    "CODEGEN"
  ],
  "author": {
    "name": "Tomas S."
  },
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/gextech/raml2code/issues"
  },
  "homepage": "https://github.com/gextech/raml2code",
  "dependencies": {
    "data2code": "0.0.3",
    "gulp-util": "3.0.1",
    "raml-parser": "0.8.7",
    "through2": "0.6.3",
    "lodash": "2.4.1",
    "deref": "0.2.6",
    "raml-client-generator": "0.0.6"
  },
  "devDependencies": {
    "chai": "^1.10.0",
    "del": "^1.1.1",
    "gulp": "^3.8.10",
    "gulp-coffee": "2.2.0",
    "gulp-jasmine": "^1.0.1",
    "gulp-mocha": "2.0.0",
    "mocha": "^2.0.1",
    "run-sequence": "^1.0.2"
  },
  "gitHead": "47f7d933a955d9da4122f9cc98f745b58533db95",
  "_id": "raml2code@0.8.39",
  "_shasum": "41f4d8448129e9b2cc404e4279c20decf3ca0d85",
  "_from": "raml2code@0.8.39",
  "_npmVersion": "1.4.23",
  "_npmUser": {
    "name": "atomsfat",
    "email": "atomsmail+npm@gmail.com"
  },
  "maintainers": [
    {
      "name": "atomsfat",
      "email": "atomsmail+npm@gmail.com"
    }
  ],
  "dist": {
    "shasum": "41f4d8448129e9b2cc404e4279c20decf3ca0d85",
    "tarball": "http://registry.npmjs.org/raml2code/-/raml2code-0.8.39.tgz"
  },
  "directories": {},
  "_resolved": "https://registry.npmjs.org/raml2code/-/raml2code-0.8.39.tgz",
  "readme": "# Raml to code generator\n\n[![Build Status](https://img.shields.io/travis/gextech/raml2code/master.svg?style=flat)](https://travis-ci.org/gextech/raml2code)\n\n## Versioning\n\nThe raml2code generator is versioned in the following manner:\n\n```\nx.y.z\n```\n\nin which *x.y* denotes the version of the [RAML specification](http://raml.org/spec.html)\nand *z* is the version of the raml2code.\n\nSo *0.8.38* is the 38nd revision of the ralm2code for the *0.8* version\nof the [RAML specification](http://raml.org/spec.html).\n\n  * This module generate code from a RAML definition\n  * It uses Handlebars templates\n\n## It's a Gulp-plugin\n```js\nvar gulp = require('gulp');\nvar raml2code = require('raml2code');\nvar genDTO = require(\"raml2code/lib/generators/groovy/raml2DTO.js\");\n\ngulp.task(\"test\", function(){\n  gulp.src('./test/cats.raml')\n    .pipe(raml2code({generator: genDTO, extra: {package:'com.gex'}}))\n    .pipe(gulp.dest('build'));\n});\n\n```\n\n## Sample gulpfile\n\n```js\nvar gulp = require('gulp');\n\nvar raml2code = require(\"raml2code\");\nvar genPojos = require(\"raml2code/lib/generators/groovy/pojo\");\nvar genJaxRS = require(\"raml2code/lib/generators/groovy/jaxrsInterface\");\nvar genRetrofitClient = require(\"raml2code/lib/generators/groovy/retrofitClient\");\n\nvar raml = require('gulp-raml');\n\nvar packagePojo = \"gex.catapi.dto\";\nvar packageClient = \"gex.catapi.client\";\nvar packageJersey = \"gex.catapi.resources\";\n\n//this should point to your raml definition\nvar ramlResource = '../../test/raml/cats.raml'\n\ngulp.task('raml', function() {\n  gulp.src(ramlResource)\n    .pipe(raml())\n    .pipe(raml.reporter('default'))\n    .pipe(raml.reporter('fail'));\n});\n\ngulp.task(\"genPojos\", ['raml'], function(){\n  gulp.src(ramlResource)\n    .pipe(raml2code({generator: genPojos, extra: {package: packagePojo}}))\n    .pipe(gulp.dest('./src/generated/groovy/gex/catapi/dto'));\n});\n\ngulp.task(\"genRetrofitClient\" , ['raml'], function(){\n  gulp.src(ramlResource)\n    .pipe(raml2code({generator: genRetrofitClient, extra: {package: packageClient, importPojos: packagePojo}}))\n    .pipe(gulp.dest('./src/generated/java/gex/catapi/client'));\n});\n\ngulp.task(\"genJaxRS\" , ['raml'], function(){\n  gulp.src(ramlResource)\n    .pipe(raml2code({generator: genJaxRS, extra: {package: packageJersey, importPojos: packagePojo}}))\n    .pipe(gulp.dest('./src/generated/groovy/gex/catapi/resources'));\n});\n\ngulp.task('build', ['raml', 'genPojos',  'genJaxRS', 'genRetrofitClient']);\n\ngulp.task('default', ['build']);\n\n```\n\n## We use the Gradle with the gulp plugin to build or loved Java project\n[gradle](https://www.gradle.org/)\n\n[gradle-gulp-plugin](https://github.com/filipblondeel/gradle-gulp-plugin)\n\n## And example of project could be found here:\n[raml2codeFullSpringExample](https://github.com/atomsfat/raml2codeFullSpringExample)\n\n  \n## You don't like our generators, DIY\n\nA generator is a simple object with the following properties:\n\n * Required properties:\n    * template -> Handlebars template (you could use your own templates).\n    * parser(data) -> Function it receives RAML parsed data, returns model that will be used in the\n     template engine, each model must have a name, this name is the file that will be generated.\n    [{ name: \"test.test\", model: {title:data.title + \" finos\"}}]\n * Optional properties:\n    * helpers -> Handlebars helpers.  \n    * partials -> Handlebars partials. \n\n\n## Generators included and tested\n  * Groovy POJO\n    This generator use json-schema spec heavily, when using $ref certain rules apply:\n      * If the json schema has $ref and the schema referred has title we will use it to make a reference. For\n       example the property owner on:\n         [cat.schema.json](src/test/raml/cat.schema.json)\n       it will result on the property Owner in [CatDTO.groovy](src/test/examples/CatDTO.groovy)\n      * if the json schema has a property of type object like food on :\n        [cat.schema.json](src/test/raml/cat.schema.json)\n       it will result on a inner class called Food in [CatDTO.groovy](src/test/examples/CatDTO.groovy)\n\n    More info on $ref definitions, http://json-schema.org/latest/json-schema-core.html#anchor30\n  * JAX-RS Interface\n      We use the optional resource.displayName to name resource classes, if you use this generator don't forget to provide it.\n      Example:\n      ```groovy\n        /cats:\n          displayName: Gatitos\n      ```\n      Will generate GatitosResource\n\n  * RETROFIT Client java interface\n  * raml-client-generator javascript client generator from mulesoft\n    [raml-client-generator](https://github.com/mulesoft/raml-client-generator)\n\n    \n\n\n\n\n",
  "readmeFilename": "README.md"
}
